<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhengbangnet.modules.mapper.ProductMapper">

	<!-- 通用查询结果列-->
	<sql id="Base_Column_List">
		memo, imageUrl, id, createDate, modifyDate, name, showUrl, price,
		memberPrice, point, givePoint, marketPrice, content, introduce, stock,
		soldOut, productCategoryId, isMarketable, orders, isTop, tagId, sn, longShowUrl,
		type,subname,spec,sweetness,isBirthdayCard,sellDate
	</sql>

	<!-- 查询（根据主键ID查询） -->
	<select id="getByPrimaryKey" resultType="com.zhengbangnet.modules.entity.Product" parameterType="java.lang.Long">
		 SELECT
		 <include refid="Base_Column_List" />
		 FROM product
		 WHERE id = #{id}
	</select>

	<!-- 查询商品销售额排行榜 -->
	<select id="findSaleSort" resultType="java.util.Map">
		select sum(oi.quantity) quantity,sum(oi.price*quantity) amount,(select name from product where id = oi.productId) productName
		from orders_item oi, orders o
		where oi.ordersId = o.id
		and o.payStatus = 1
		AND (o.ordersStatus = 1 or o.ordersStatus = 2)
		GROUP BY oi.productId
		ORDER BY amount desc
		LIMIT 0,6
	</select>

	<select id="findCountsByParams" resultType="java.lang.Long">
		SELECT count(*)
		FROM product
		WHERE 1 = 1
		<if test="startTime != null and startTime!=''">
			and createDate &gt;= #{startTime}
		</if>
		<if test="endTime != null and endTime!=''">
			and createDate &lt;= #{endTime}
		</if>
	</select>

	<!-- 查询（根据商品分类查询） -->
	<select id="getByProductCategoryId" resultType="java.util.Map" parameterType="java.lang.Long">
		SELECT
		<include refid="Base_Column_List" />
		FROM product
		WHERE productCategoryId = #{productCategoryId}
	</select>

	<!--删除：根据主键ID删除-->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		 DELETE FROM product
		 WHERE id = #{id}
	</delete>
	
	<update id="updateProductUp" parameterType="java.lang.Long">
		 UPDATE product
		 <set> 
			 isMarketable = 1 
		 </set>
		 WHERE id = #{id}
	</update>
	
	<update id="updateProductDown" parameterType="java.lang.Long">
		 UPDATE product
		 <set> 
			 isMarketable = 0 
		 </set>
		 WHERE id = #{id}
	</update>

	<!-- 添加 -->
	<insert id="insert" parameterType="com.zhengbangnet.modules.entity.Product">
		INSERT INTO product
		(createDate,modifyDate,name,subname,showUrl,longShowUrl,price,
		memberPrice,marketPrice,point,givePoint,content,introduce,stock,
		soldOut,isMarketable,orders,isTop,tagId,sn,imageUrl,memo,
		productCategoryId,sweetness,type,isBirthdayCard,sellDate)
		VALUES
		(#{createDate},#{modifyDate},#{name},#{subname},#{showUrl},#{longShowUrl},
		#{price},#{memberPrice},#{marketPrice},#{point},#{givePoint},#{content},
		#{introduce},#{stock},#{soldOut},#{isMarketable},#{orders},#{isTop},#{tagId},
		#{sn},#{imageUrl},#{memo},#{productCategoryId},#{sweetness},#{type},#{isBirthdayCard},#{sellDate})
		<selectKey resultType="java.lang.Long" keyProperty="id">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
	</insert>

	<!-- 添加 （匹配有值的字段）-->
	<insert id="insertSelective" parameterType="com.zhengbangnet.modules.entity.Product">
		INSERT INTO product
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="createDate != null">
				createDate,
			</if>
			<if test="modifyDate != null">
				modifyDate,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="subname != null">
				subname,
			</if>
			<if test="showUrl != null">
				showUrl,
			</if>
			<if test="longShowUrl != null">
				longShowUrl,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="memberPrice != null">
				memberPrice,
			</if>
			<if test="marketPrice != null">
				marketPrice,
			</if>
			<if test="point != null">
				point,
			</if>
			<if test="givePoint != null">
				givePoint,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="introduce != null">
				introduce,
			</if>
			<if test="stock != null">
				stock,
			</if>
			<if test="soldOut != null">
				soldOut,
			</if>
			<if test="isMarketable != null">
				isMarketable,
			</if>
			<if test="orders != null">
				orders,
			</if>
			<if test="isTop != null">
				isTop,
			</if>
			<if test="tagId != null">
				tagId,
			</if>
			<if test="sn != null">
				sn,
			</if>
			<if test="imageUrl != null">
				imageUrl,
			</if>
			<if test="memo != null">
				memo,
			</if>
			<if test="productCategoryId != null">
				productCategoryId,
			</if>
			<if test="sweetness != null">
				sweetness,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="isBirthdayCard != null">
				isBirthdayCard,
			</if>
			<if test="spec != null">
				spec,
			</if>
			<if test="sellDate != null">
				sellDate
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="createDate!=null">
				#{createDate},
			</if>
			<if test="modifyDate!=null">
				#{modifyDate},
			</if>
			<if test="name!=null">
				#{name},
			</if>
			<if test="subname!=null">
				#{subname},
			</if>
			<if test="showUrl!=null">
				#{showUrl},
			</if>
			<if test="longShowUrl!=null">
				#{longShowUrl},
			</if>
			<if test="price!=null">
				#{price},
			</if>
			<if test="memberPrice!=null">
				#{memberPrice},
			</if>
			<if test="marketPrice!=null">
				#{marketPrice},
			</if>
			<if test="point!=null">
				#{point},
			</if>
			<if test="givePoint!=null">
				#{givePoint},
			</if>
			<if test="content!=null">
				#{content},
			</if>
			<if test="introduce!=null">
				#{introduce},
			</if>
			<if test="stock!=null">
				#{stock},
			</if>
			<if test="soldOut!=null">
				#{soldOut},
			</if>
			<if test="isMarketable!=null">
				#{isMarketable},
			</if>
			<if test="orders!=null">
				#{orders},
			</if>
			<if test="isTop!=null">
				#{isTop},
			</if>
			<if test="tagId!=null">
				#{tagId},
			</if>
			<if test="sn!=null">
				#{sn},
			</if>
			<if test="imageUrl!=null">
				#{imageUrl},
			</if>
			<if test="memo!=null">
				#{memo},
			</if>
			<if test="productCategoryId!=null">
				#{productCategoryId},
			</if>
			<if test="sweetness!=null">
				#{sweetness},
			</if>
			<if test="type!=null">
				#{type},
			</if>
			<if test="isBirthdayCard !=null">
				#{isBirthdayCard},
			</if>
			<if test="spec != null">
				#{spec},
			</if>
			<if test="sellDate != null">
				#{sellDate}
			</if>
		</trim>
		<selectKey resultType="java.lang.Long" keyProperty="id">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
	</insert>

	<!-- 修 改-->
	<update id="updateByPrimaryKeySelective" parameterType="com.zhengbangnet.modules.entity.Product">
		UPDATE product
		<set>
			<if test="modifyDate != null">
				modifyDate = #{modifyDate},
			</if>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="subname != null">
				subname = #{subname},
			</if>
			<if test="showUrl != null">
				showUrl = #{showUrl},
			</if>
			<if test="longShowUrl != null">
				longShowUrl = #{longShowUrl},
			</if>
			<if test="price != null">
				price = #{price},
			</if>
			<if test="memberPrice != null">
				memberPrice = #{memberPrice},
			</if>
			<if test="marketPrice != null">
				marketPrice = #{marketPrice},
			</if>
			<if test="point != null">
				point = #{point},
			</if>
			<if test="givePoint != null">
				givePoint = #{givePoint},
			</if>
			<if test="content != null">
				content = #{content},
			</if>
			<if test="introduce != null">
				introduce = #{introduce},
			</if>
			<if test="stock != null">
				stock = #{stock},
			</if>
			<if test="soldOut != null">
				soldOut = #{soldOut},
			</if>
			<if test="isMarketable != null">
				isMarketable = #{isMarketable},
			</if>
			<if test="orders != null">
				orders = #{orders},
			</if>
			<if test="isTop != null">
				isTop = #{isTop},
			</if>
			<if test="tagId != null">
				tagId = #{tagId},
			</if>
			<if test="sn != null">
				sn = #{sn},
			</if>
			<if test="imageUrl != null">
				imageUrl = #{imageUrl},
			</if>
			<if test="memo != null">
				memo = #{memo},
			</if>
			<if test="productCategoryId != null">
				productCategoryId = #{productCategoryId},
			</if>
			<if test="sweetness != null">
				sweetness = #{sweetness},
			</if>
			<if test="type != null">
				type = #{type},
			</if>
			<if test="isBirthdayCard != null">
				isBirthdayCard = #{isBirthdayCard},
			</if>
			<if test="spec != null">
				spec = #{spec},
			</if>
			<if test="sellDate != null">
				sellDate = #{sellDate}
			</if>

		</set>
		WHERE id = #{id}
	</update>

	<!-- 修 改-->
	<update id="updateByPrimaryKey" parameterType="com.zhengbangnet.modules.entity.Product">
		UPDATE product
		SET
		modifyDate = #{modifyDate},
		name = #{name},
		subname = #{subname},
		showUrl = #{showUrl},
		longShowUrl = #{longShowUrl},
		price = #{price},
		memberPrice = #{memberPrice},
		marketPrice = #{marketPrice},
		point = #{point},
		givePoint = #{givePoint},
		content = #{content},
		introduce = #{introduce},
		stock = #{stock},
		soldOut = #{soldOut},
		isMarketable = #{isMarketable},
		orders = #{orders},
		isTop = #{isTop},
		tagId = #{tagId},
		sn = #{sn},
		imageUrl = #{imageUrl},
		memo = #{memo},
		productCategoryId = #{productCategoryId},
		sweetness = #{sweetness},
		type = #{type},
		isBirthdayCard = #{isBirthdayCard},
		spec = #{spec},
		sellDate = #{sellDate}
		WHERE id = #{id}
	</update>

	<select id="getBySn" resultType="com.zhengbangnet.modules.entity.Product" parameterType="java.lang.String">
		 SELECT 
		  <include refid="Base_Column_List" />
		 FROM product
		 WHERE sn = #{sn} limit 1
	</select>
	
	<!-- 分页查询-->
	<select id="findPageByParams" resultType="java.util.Map" >
		 SELECT 
		 p.id id, p.createDate createDate, p.modifyDate modifyDate, p.name name, p.showUrl showUrl, p.price price,p.memberPrice memberPrice,
		 p.point point, p.givePoint givePoint, p.marketPrice marketPrice, p.content content, p.introduce introduce, p.stock stock,
		 p.soldOut soldOut, p.productCategoryId productCategoryId, p.isMarketable isMarketable, p.orders orders, p.isTop isTop,
		 p.tagId tagId, p.sn sn, p.longShowUrl longShowUrl, p.imageUrl imageUrl, p.memo memo, pc.name productCategoryName, p.spec spec,p.type,
		sellDate,
		(SELECT price FROM product_stock ps WHERE ps.productId = p.id AND ps.isVoid = 0 ORDER BY ps.price asc limit 1) lowPrice,
		(SELECT price FROM product_stock ps WHERE ps.productId = p.id AND ps.isVoid = 0 ORDER BY ps.price desc limit 1) highPrice,
		(SELECT ps.id FROM product_stock ps WHERE ps.productId = p.id AND ps.isVoid = 0 ORDER BY ps.price asc limit 1) lowPriceSkuId,
		(SELECT IFNULL(SUM(ps.soldOut),0) sumSoldOut FROM product_stock ps WHERE ps.productId = p.id AND ps.isVoid = 0) sumSoldOut,
		(SELECT IFNULL(SUM(ps.stock),0) sumStock FROM product_stock ps WHERE ps.productId = p.id AND ps.isVoid = 0) sumStock
		 FROM product p
		 left join product_category pc on p.productCategoryId = pc.id
		 where 1=1
		 <if test="isMarketable != null">
		  and p.isMarketable = #{isMarketable}
		 </if>
		 <if test="name != null and name!=''">
		  and p.name like '%${name}%'
		 </if>
		<if test="type != null">
			and p.type = #{type}
		</if>
		 <if test="startTime != null and startTime!=''">
		  and p.createDate &gt;= #{startTime}
		 </if>
		 <if test="endTime != null and endTime!=''">
		  and p.createDate  &lt;= #{endTime}
		 </if>
		 <if test="productCategoryId != null and productCategoryId!=''">
			 and p.productCategoryId = #{productCategoryId}
		 </if>
		<if test="tagIds != null and tagIds.size()>0">
			AND (SELECT pt.tagId FROM product_tag pt WHERE pt.productId = p.id and pt.tagId IN
			<foreach collection="tagIds" item="tag" separator="," open="(" close=")" >
				#{tag}
			</foreach>
			) IS NOT NULL
		</if>

		<!--
		 * //xinpinSort 按时间降序排列
		 * //priceAsc 按价格升序排列
		 * //priceDesc 按价格降序排列
		 * //salesAsc 按销量升序排列
		 * //salesDesc 按销量降序排列
		 * //zongheSort 按后台商品排序字段排序，时间降序排列
		-->
		<choose>
			<when test="sort!=null and sort=='xinpinSort'">
				order by p.createDate desc
			</when>
			<when test="sort!=null and sort=='priceAsc'">
				/*order by p.price asc*/
                order by (select pst.price from product_stock pst where pst.productId = p.id ORDER BY pst.price asc LIMIT 1 ) asc
			</when>
			<when test="sort!=null and sort=='priceDesc'">
				/*order by p.price desc*/
                order by (select pst.price from product_stock pst where pst.productId = p.id ORDER BY pst.price asc LIMIT 1 ) desc
			</when>
			<when test="sort!=null and sort=='salesAsc'">
				order by p.soldOut asc
			</when>
			<when test="sort!=null and sort=='salesDesc'">
				order by p.soldOut desc
			</when>
			<when test="sort!=null and sort=='zongheSort'">
				order by if(isnull(p.orders),0,1) desc,p.orders desc
			</when>
			<otherwise>
				order by p.createDate desc
			</otherwise>
		</choose>
		
		LIMIT #{pageable.firstResult},#{pageable.pageSize}
	</select>
	<select id="getCountByParams" resultType="java.lang.Long" >
		 SELECT COUNT(p.id) 
		 FROM product p
		 WHERE 1=1
        <if test="isMarketable != null">
            and p.isMarketable = #{isMarketable}
        </if>
        <if test="name != null and name!=''">
            and p.name like '%${name}%'
        </if>
        <if test="startTime != null and startTime!=''">
            and p.createDate &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime!=''">
            and p.createDate  &lt;= #{endTime}
        </if>
        <if test="productCategoryId != null and productCategoryId!=''">
            and p.productCategoryId = #{productCategoryId}
        </if>
        <if test="tagIds != null and tagIds.size()>0">
          	AND (SELECT pt.tagId FROM product_tag pt WHERE pt.productId = p.id and pt.tagId IN
            <foreach collection="tagIds" item="tag" separator="," open="(" close=")" >
                #{tag}
            </foreach>
            ) IS NOT NULL
        </if>

        <!--
         * //xinpinSort 按时间降序排列
         * //priceAsc 按价格升序排列
         * //priceDesc 按价格降序排列
         * //salesAsc 按销量升序排列
         * //salesDesc 按销量降序排列
         * //zongheSort 按后台商品排序字段排序，时间降序排列
        -->
        <choose>
            <when test="sort!=null and sort=='xinpinSort'">
                order by p.createDate desc
            </when>
            <when test="sort!=null and sort=='priceAsc'">
                order by p.price asc
            </when>
            <when test="sort!=null and sort=='priceDesc'">
                order by p.price desc
            </when>
            <when test="sort!=null and sort=='salesAsc'">
                order by p.soldOut asc
            </when>
            <when test="sort!=null and sort=='salesDesc'">
                order by p.soldOut desc
            </when>
            <when test="sort!=null and sort=='zongheSort'">
                order by if(isnull(p.orders),0,1) desc,p.orders desc
            </when>
            <otherwise>
                order by if(isnull(p.orders),0,1) desc,p.orders desc
            </otherwise>
        </choose>
	</select>
	
	<select id="findAll" resultType="com.zhengbangnet.modules.entity.Product" >
		 SELECT
		 <include refid="Base_Column_List" />
		 FROM product
	</select>
	
	<select id="findListByParams" resultType="java.util.Map">
		SELECT p.*,
		(select price from product_stock ps where ps.productId = p.id order by ps.price asc limit 1) lowPrice,
		(select ps.id from product_stock ps where ps.productId = p.id order by ps.price asc limit 1) lowProductStockId,
		(select price from product_stock ps where ps.productId = p.id order by ps.price desc limit 1) highPrice,
		(select ps.id from product_stock ps where ps.productId = p.id order by ps.price desc limit 1) highPrice
		FROM product p
		  WHERE 1=1
		 <if test="isMarketable != null ">
		  and p.isMarketable = #{isMarketable}
		 </if>
		<if test="type != null ">
			and p.type = #{type}
		</if>
		 <if test="productCategoryId != null ">
		  and p.productCategoryId = #{productCategoryId}
		 </if>
		<if test="keyword != null ">
			and p.name like CONCAT(CONCAT('%', #{keyword}), '%')
		</if>

		<if test="tagIds != null and tagIds.size()>0">
			AND (SELECT pt.tagId FROM product_tag pt WHERE pt.productId = p.id and pt.tagId IN
			<foreach collection="tagIds" item="tag" separator="," open="(" close=")" >
				#{tag}
			</foreach>
			) IS NOT NULL
		</if>
		order by if(isnull(p.orders),0,1) desc,p.orders asc,p.createDate desc
		<if test="count!=null">
			limit #{count}
		</if>
	</select>


	<select id="findSpecName" resultType="java.util.Map" >
		select DISTINCT sn.*
		from product p
		join product_stock ps on p.id = ps.productId
		join product_stock_spec_name_value pssnv on pssnv.productStockId = ps.id
		join spec_name sn on sn.id = pssnv.specNameId
		where p.id = #{productId}
		AND ps.isVoid = 0
		AND ps.isDisabled = 0
	</select>

	<select id="findSpecValue" resultType="java.util.Map" >
		select
			DISTINCT sv.*
		from product p
		join product_stock ps on p.id = ps.productId
		join product_stock_spec_name_value pssnv on pssnv.productStockId = ps.id
		join spec_value sv on sv.id = pssnv.specValueId
		where p.id = #{productId}
		AND sv.specNameId = #{specNameId}
		AND ps.isVoid = 0
		AND ps.isDisabled = 0
	</select>

	<select id="findSpecValueId" resultType="java.util.Map" >
		select DISTINCT a.specValueId from
		product_stock_spec_name_value a
		where a.productStockId in (
		select ps.id
		from product p
		join product_stock ps on p.id = ps.productId
		join product_stock_spec_name_value pssnv on pssnv.productStockId = ps.id
			where p.id = #{productId}
			<if test="specValues!=null and specValues.length>0">
				and specValueId in
				<foreach collection="specValues" open="(" close=")" separator="," item="sv" >
					#{sv}
				</foreach>
			</if>
		)
		and a.specNameId = #{specNameId}
	</select>



</mapper>